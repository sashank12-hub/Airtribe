const{verifyToken,isTokenValid}=
constjwt=
describe("testthetoken",()=
letres,next,req;=
beforeEach(()=
next=
res=
req=
body:{},=
};=
//jest.mock(jwt);=
});=
test("shouldtestformissingheader",async()=
verifyToken(req,res,next);=
expect(req.body.email).toEqual(undefined);=
expect(req.body.message).toEqual("plssignin");=
expect(next).toBeCalledTimes(1);=
});=
test("should123testformissingheader",async()=
req=
headers:{=
authorization:'JWTtoken'=
}=
}=
//jwt.verify('token',process.env.SECRET).mockImplementation((err,data)=
//jest.spyOn(jwt,'verify').mockImplementation(=
//jest.fn((req.headers.authorization.split('')[1],process.env.SECRET,callback)=
//);=
jest.mock('jsonwebtoken',()=
...jest.requireActual('jsonwebtoken'),=
verify:jest.fn((token,secretOrPublicKey,options,callback)=
returncallback(null,{email:'cool@dude.com',exp:100});=
})=
}));=
verifyToken(req,res,next);=
expect(isTokenValid).toBeCalledTimes(1);=
expect(next).toBeCalledTimes(1);=
});=
});=